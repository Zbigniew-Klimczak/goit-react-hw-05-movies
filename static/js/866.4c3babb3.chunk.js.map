{"version":3,"file":"static/js/866.4c3babb3.chunk.js","mappings":"iRACA,EAAuB,sBAAvB,EAAwD,0BAAxD,EAAyF,sB,SC0CzF,EApCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEcC,EAAAA,EAAAA,IAAaT,GAF3B,OAEVU,EAFU,OAGhBN,EAAWM,EAAgBC,KAAKC,SACY,IAAxCF,EAAgBC,KAAKC,QAAQC,QAC/BC,IAAAA,OAAAA,KAAqB,wBALP,gDAQhBC,QAAQC,IAAR,MARgB,yBAUhBV,GAAa,GAVG,4EAAH,qDAajBE,GACD,GAAE,CAACR,KAEF,iCACiB,IAAdK,IAAsB,SAAC,KAAD,CAAaY,MAAM,UAC3B,IAAdZ,IACC,eAAIa,UAAWC,EAAf,SACGhB,EAAQiB,KAAI,SAAAC,GAAM,OACjB,gBAAIH,UAAWC,EAAf,WACE,cAAGD,UAAWC,EAAd,SAAyBE,EAAOC,UAChC,uBAAID,EAAOE,YAFqBF,EAAOG,GADxB,QAU5B,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__pCzae\",\"listItem\":\"Reviews_listItem__grAS3\",\"name\":\"Reviews_name__puWkV\"};","import { fetchReviews } from 'utils/FetchFunc';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ProgressBar } from 'react-loader-spinner';\nimport Notiflix from 'notiflix';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchReview = async () => {\n      try {\n        const reviewsResponse = await fetchReviews(movieId);\n        setReviews(reviewsResponse.data.results);\n        if (reviewsResponse.data.results.length === 0) {\n          Notiflix.Notify.info('No reviews available');\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReview();\n  }, [movieId]);\n  return (\n    <>\n      {isLoading === true && <ProgressBar width=\"100%\" />}\n      {isLoading === false && (\n        <ul className={css.list}>\n          {reviews.map(review => (\n            <li className={css.listItem} key={review.id}>\n              <p className={css.name}>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","fetchReview","fetchReviews","reviewsResponse","data","results","length","Notiflix","console","log","width","className","css","map","review","author","content","id"],"sourceRoot":""}