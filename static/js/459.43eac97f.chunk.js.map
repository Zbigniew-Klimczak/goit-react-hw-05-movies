{"version":3,"file":"static/js/459.43eac97f.chunk.js","mappings":"iRACA,EAAuB,mBAAvB,EAAqD,uBAArD,EAAmF,mB,SC0DnF,EApDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEQC,EAAAA,EAAAA,IAAaT,GAFrB,OAERU,EAFQ,OAGdN,EAAYM,EAAQC,KAAKC,MACQ,IAA7BF,EAAQC,KAAKC,KAAKC,QACpBC,IAAAA,OAAAA,KAAqB,iCALT,gDAQdC,QAAQC,IAAR,MARc,yBAUdV,GAAa,GAVC,4EAAH,qDAafE,GACD,GAAE,CAACR,EAASG,KAEX,iCACiB,IAAdE,IAAsB,SAAC,KAAD,CAAaY,MAAM,UAC3B,IAAdZ,IACC,gCACuB,IAApBF,EAASU,SACR,qFAEDV,EAASU,OAAS,IACjB,eAAIK,UAAWC,EAAf,SACGhB,EAASiB,KAAI,SAAAC,GAAU,OACtB,gBAAIH,UAAWC,EAAf,WACE,gBACEG,QAAQ,OACRC,IAC8B,OAA5BF,EAAWG,aAAX,yCACsCH,EAAWG,cAC7C,4FAENC,IAAKJ,EAAWK,QAElB,cAAGR,UAAWC,EAAd,SAAyBE,EAAWK,QACpC,uCAAeL,EAAWM,eAXMN,EAAWO,GADvB,WAqBrC,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__oOD41\",\"listItem\":\"Cast_listItem__2rNHA\",\"name\":\"Cast_name__y8nr9\"};","import { fetchCredits } from 'utils/FetchFunc';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ProgressBar } from 'react-loader-spinner';\nimport Notiflix from 'notiflix';\n\nimport css from './Cast.module.css';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castList, setCastList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const credits = await fetchCredits(movieId);\n        setCastList(credits.data.cast);\n        if (credits.data.cast.length === 0) {\n          Notiflix.Notify.info('No information about the cast');\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId, castList]);\n  return (\n    <>\n      {isLoading === true && <ProgressBar width=\"100%\" />}\n      {isLoading === false && (\n        <>\n          {castList.length === 0 && (\n            <p>Unfortunatelly we don't have informations about the cast.</p>\n          )}\n          {castList.length > 0 && (\n            <ul className={css.list}>\n              {castList.map(castMember => (\n                <li className={css.listItem} key={castMember.id}>\n                  <img\n                    loading=\"lazy\"\n                    src={\n                      castMember.profile_path !== null\n                        ? `https://image.tmdb.org/t/p/w300${castMember.profile_path}`\n                        : 'https://t3.ftcdn.net/jpg/04/34/72/82/360_F_434728286_OWQQvAFoXZLdGHlObozsolNeuSxhpr84.jpg'\n                    }\n                    alt={castMember.name}\n                  />\n                  <p className={css.name}>{castMember.name}</p>\n                  <p>Character: {castMember.character}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </>\n      )}\n    </>\n  );\n};\nexport default Cast;\n"],"names":["movieId","useParams","useState","castList","setCastList","isLoading","setIsLoading","useEffect","fetchCast","fetchCredits","credits","data","cast","length","Notiflix","console","log","width","className","css","map","castMember","loading","src","profile_path","alt","name","character","id"],"sourceRoot":""}